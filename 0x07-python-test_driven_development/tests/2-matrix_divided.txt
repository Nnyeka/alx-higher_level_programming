
The ``matrix_divided`` module
===========================

the module defines a divisive funtion on allelements in a matrix

Usage
======

``matrix_divided(...)`` returns a new matrix. 

Import module

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ImportError: No module named '2-matrix_divided'


Check Docstring

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> d = __import__("2-matrix_divided").__doc__
>>> len(d) > 1
True

Testing usual arguments integers/floats:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
... [2, 2, 3],
... [3, 2, 2]
... ]
>>> matrix_divided(matrix, 1.2)
[[1.67, 1.67, 2.5], [2.5, 1.67, 1.67]]


>>> matrix_divided([[1.8, 2.5, 4.2], [3.3, 2.4, 5.6]], 2)
[[0.9, 1.25, 2.1], [1.65, 1.2, 2.8]]


>>> matrix_divided([[1.8, 5, 4.2], [3.3, 4, 6]], 2)
[[0.9, 2.5, 2.1], [1.65, 2.0, 3.0]]


Testing unequal rows

>>> matrix_divided([[1.8, 5, 4.2], [3.3, 4]], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 29, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size

Testing for non integers/float
>>> matrix_divided([[1.8, 5, 4.2], [3.3, 4, 'school']], 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 25, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of "
TypeError: matrix must be a matrix (list of lists) of integers/floats


Testing for non matrix

>>> matrix_divided([1.8, 5, 4.2], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 25, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of "
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided("best", 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 25, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of "
TypeError: matrix must be a matrix (list of lists) of integers/floats


Testing for div is zero or not a number

>>> matrix_divided([[1.8, 5, 4.2], [3.3, 4, 6]], 'div')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 32, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number


>>> matrix_divided([[1.8, 5, 4.2], [3.3, 4, 6]], 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 35, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero


Testing for empty or more than two arguments

>>> matrix_divided()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


>>> matrix_divided([[1.8, 5, 4.2], [3.3, 4, 6]],2, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() takes 2 positional arguments but 3 were given


