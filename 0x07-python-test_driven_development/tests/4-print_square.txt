The ``print_square`` module
===========================

This module defines a square printing function
``print_square(size)``.


Usage
========

Squares are printed using the ``#`` character.
The parameter ```size``` represents the height and width of
the square.

Import module

>>> print_square = __import__("4-print_square").print_square

Testing with usual arguments

>>> print_square(6)
######
######
######
######
######
######

>>> print_square(0)

Testing with more than one argument
>>> print_square(3, 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: print_square() takes 1 positional argument but 2 were given


Testing with a string argument


>>> print_square('h')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/4-print_square.py", line 14, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer

Testing with a float argument
>>> print_square(2.5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/4-print_square.py", line 14, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer


Tetsing with a negattive number

>>> print_square(-6)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/4-print_square.py", line 16, in print_square
    raise ValueError("size must be >= 0")
ValueError: size must be >= 0

Testing wfor an empty argument
>>> print_square()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: print_square() missing 1 required positional argument: 'size'

